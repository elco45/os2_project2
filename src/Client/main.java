package Client;


import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author elco45
 */
public class main extends javax.swing.JFrame {

    /**
     * Creates new form main
     */
    public main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pop_dir = new javax.swing.JPopupMenu();
        pop_dir_add = new javax.swing.JMenuItem();
        pop_dir_remove = new javax.swing.JMenuItem();
        pop_file_add = new javax.swing.JMenuItem();
        pop_file = new javax.swing.JPopupMenu();
        pop_file_remove = new javax.swing.JMenuItem();
        pop_file_edit = new javax.swing.JMenuItem();
        pop_file_view = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        tree_main = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        ta_main = new javax.swing.JTextArea();

        pop_dir_add.setText("Agregar directorio");
        pop_dir_add.setContentAreaFilled(false);
        pop_dir_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pop_dir_addActionPerformed(evt);
            }
        });
        pop_dir.add(pop_dir_add);

        pop_dir_remove.setText("Eliminar directorio");
        pop_dir_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pop_dir_removeActionPerformed(evt);
            }
        });
        pop_dir.add(pop_dir_remove);

        pop_file_add.setText("Agregar archivo");
        pop_file_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pop_file_addActionPerformed(evt);
            }
        });
        pop_dir.add(pop_file_add);

        pop_file_remove.setText("Eliminar archivo");
        pop_file_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pop_file_removeActionPerformed(evt);
            }
        });
        pop_file.add(pop_file_remove);

        pop_file_edit.setText("Editar archivo");
        pop_file_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pop_file_editActionPerformed(evt);
            }
        });
        pop_file.add(pop_file_edit);

        pop_file_view.setText("Mostrar contenido");
        pop_file_view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pop_file_viewActionPerformed(evt);
            }
        });
        pop_file.add(pop_file_view);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Root");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("colors");
        javax.swing.tree.DefaultMutableTreeNode treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("blue");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("violet");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("red");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("yellow");
        javax.swing.tree.DefaultMutableTreeNode treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("dfasf");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("sports");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("basketball");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("soccer");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("football");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("hockey");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("food");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("hot dogs");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("pizza");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("ravioli");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("bananas");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        tree_main.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        tree_main.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tree_mainMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tree_main);

        ta_main.setColumns(20);
        ta_main.setRows(5);
        jScrollPane2.setViewportView(ta_main);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tree_mainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tree_mainMouseClicked
        try {
            DefaultMutableTreeNode node = ((DefaultMutableTreeNode) (tree_main.getSelectionPath().getLastPathComponent()));
            if (evt.isMetaDown() && (node.getChildCount() >= 1)) {//&&posicion actual es un directorio
                pop_dir.show(evt.getComponent(), evt.getX(), evt.getY());
            } else if (evt.isMetaDown() && (node.isLeaf())) {//&&posicion actual es un archivo
                pop_file.show(evt.getComponent(), evt.getX(), evt.getY());
            }
        } catch (Exception ex) {

        }
    }//GEN-LAST:event_tree_mainMouseClicked

    private void pop_dir_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pop_dir_addActionPerformed
        try {
            String dir = JOptionPane.showInputDialog(this, "Ingrese el nombre del directorio", "Nuevo Directorio", JOptionPane.PLAIN_MESSAGE);
            DefaultMutableTreeNode node = ((DefaultMutableTreeNode) (tree_main.getSelectionPath().getLastPathComponent()));
            DefaultTreeModel m = (DefaultTreeModel) tree_main.getModel();
            DefaultMutableTreeNode n_dir = new DefaultMutableTreeNode(dir);
            node.add(n_dir);
            m.reload();
            JOptionPane.showMessageDialog(this, "Se ha creado el directorio exitosamente", "Exito!", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {

        }
    }//GEN-LAST:event_pop_dir_addActionPerformed

    private void pop_dir_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pop_dir_removeActionPerformed
        try {
            DefaultMutableTreeNode node = ((DefaultMutableTreeNode) (tree_main.getSelectionPath().getLastPathComponent()));
            if (node.getChildCount() == 0) {
                DefaultTreeModel m = (DefaultTreeModel) tree_main.getModel();
                node.removeFromParent();
                m.reload();
                JOptionPane.showMessageDialog(this, "Se ha eliminado el directorio exitosamente", "Exito!", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "El directorio debe estar vacio!", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {

        }
    }//GEN-LAST:event_pop_dir_removeActionPerformed

    private void pop_file_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pop_file_addActionPerformed
        try {
            String dir = JOptionPane.showInputDialog(this, "Ingrese el nombre del archivo", "Nuevo Directorio", JOptionPane.PLAIN_MESSAGE);
            DefaultMutableTreeNode node = ((DefaultMutableTreeNode) (tree_main.getSelectionPath().getLastPathComponent()));
            DefaultTreeModel m = (DefaultTreeModel) tree_main.getModel();
            DefaultMutableTreeNode n_dir = new DefaultMutableTreeNode(dir);
            node.add(n_dir);
            m.reload();
            JOptionPane.showMessageDialog(this, "Se ha creado el archivo exitosamente", "Exito!", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {

        }
    }//GEN-LAST:event_pop_file_addActionPerformed

    private void pop_file_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pop_file_removeActionPerformed
        try {
            DefaultMutableTreeNode node = ((DefaultMutableTreeNode) (tree_main.getSelectionPath().getLastPathComponent()));
            DefaultTreeModel m = (DefaultTreeModel) tree_main.getModel();
            node.removeFromParent();
            m.reload();
            JOptionPane.showMessageDialog(this, "Se ha eliminado el archivo exitosamente", "Exito!", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {

        }
    }//GEN-LAST:event_pop_file_removeActionPerformed

    private void pop_file_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pop_file_editActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pop_file_editActionPerformed

    private void pop_file_viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pop_file_viewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pop_file_viewActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu pop_dir;
    private javax.swing.JMenuItem pop_dir_add;
    private javax.swing.JMenuItem pop_dir_remove;
    private javax.swing.JPopupMenu pop_file;
    private javax.swing.JMenuItem pop_file_add;
    private javax.swing.JMenuItem pop_file_edit;
    private javax.swing.JMenuItem pop_file_remove;
    private javax.swing.JMenuItem pop_file_view;
    private javax.swing.JTextArea ta_main;
    private javax.swing.JTree tree_main;
    // End of variables declaration//GEN-END:variables
}
